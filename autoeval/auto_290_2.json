[{"question": "Dado el experimento aleatorio de lanzar dos dados, llamaremos X e Y a las variables aleatorias que corresponden con el resultado del primer y del segundo dado. \u00bfCu\u00e1l ser\u00e1 la probabilidad de que el n\u00famero del primer dado sea mayor que 3, dado que el segundo es un 2 (P(X>3|Y=2))?", "type": "multiple_choice", "answers": [{"code": "50%", "correct": true, "feedback": "\u00a1Correcto! Tenemos que, tanto el rango de X como el de Y es R(X)=R(Y)={1, 2, 3, 4, 5, 6} y como X e Y son variables aleatorias discretas independientes sabemos que P(X>3|Y=2) = P(X>3), por lo que nos quedar\u00e1: P(X>3)=P(X=4)+P(X=5)+P(X=6)=1/6+1/6+1/6=1/2=50%."}, {"code": "16,67%", "correct": false, "feedback": "Incorrecto, esta probabilidad corresponde a la de obtener un 2 en el segundo lanzamiento, ya que equivale a la fracci\u00f3n 1/6: P(Y=2)=1/6. Revisa las propiedades de la probabilidad y las variables aleatorias discretas"}, {"code": "33,33%", "correct": false, "feedback": "Incorrecto, este valor corresponde a que cualquiera de los dos resultados sea mayor que 4 o menor que 3: P(X>4)=P(X=5)+P(X=6)=1/6+1/6=1/3=33,33%, lo mismo para Y y para la probabilidad de ser menor que 3."}, {"code": "0%", "correct": false, "feedback": "Incorrecto, este es el valor ser\u00eda si solo tuvi\u00e9semos una variable: P(X>3|X=2), ya que no podr\u00eda darse este caso."}]}]