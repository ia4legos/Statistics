[{"question": "Tras realizar el test ANOVA no hemos conseguido evidencias significativas para rechazar su hip\u00f3tesis nula, pero se realiza el test de Tukey HSD. Si tenemos 10 comparaciones dos a dos (5 grupos), \u00bfcu\u00e1ntos p-valores ajustados esperamos tener menores que la tasa de error familiar?", "type": "multiple_choice", "answers": [{"code": "0", "correct": true, "feedback": "\u00a1Correcto! Si resulta que las medias de todos los grupos son significativamente iguales (no rechazamos H0 en el test ANOVA), no se rechazar\u00e1 ninguna hip\u00f3tesis nula en el test de Tukey HSD."}, {"code": "10", "correct": false, "feedback": "Incorrecto, si hemos rechazado H0 en el test ANOVA, quiere decir que las medias de todos los grupos son significativamente iguales. Si, tras rechazar H0 en el test ANOVA, las medias de todos los grupos fuesen significativamente entre s\u00ed (todos los pares de grupos), se dar\u00eda este caso."}, {"code": "11", "correct": false, "feedback": "Incorrecto, si hemos rechazado H0 en el test ANOVA, quiere decir que las medias de todos los grupos son significativamente iguales. Igualmente, no puede haber m\u00e1s comparaciones significativas (11) que combinaciones posibles (10)."}, {"code": "5", "correct": false, "feedback": "Incorrecto, si hemos rechazado H0 en el test ANOVA, quiere decir que las medias de todos los grupos son significativamente iguales. Si, tras rechazar H0 en el test ANOVA, 5 parejas de grupos fuesen significativamente entre s\u00ed, se dar\u00eda este caso."}]}]