[{"question": "Con los conjuntos A={2,4}, B={1,3} y C={1,4}, calculamos el producto cartesiano BxAxC. \u00bfCu\u00e1l de las siguientes tuplas NO se encontrar\u00e1 entre los elementos de esta operaci\u00f3n?", "type": "multiple_choice", "answers": [{"code": "(2, 1, 1)", "correct": true, "feedback": "\u00a1Correcto! Este elemento se encontrar\u00eda en el producto cartesiano AxBxC o AxCxB, ya que el 2 solo se encuentra en el conjunto A."}, {"code": "(1, 2, 4)", "correct": false, "feedback": "Incorrecto, este elemento s\u00ed se encuentra dentro del producto cartesiano BxAxC, siendo el 1 el primer elemento de B, 2 el primer elemento de A y 4 el segundo elemento de C."}, {"code": "(3, 4, 4)", "correct": false, "feedback": "Incorrecto, este elemento s\u00ed se encuentra dentro del producto cartesiano BxAxC, siendo el 3 el segundo elemento de B, 4 el segundo elemento de A y 4 el segundo elemento de C."}, {"code": "(1, 4, 1)", "correct": false, "feedback": "Incorrecto, este elemento s\u00ed se encuentra dentro del producto cartesiano BxAxC, siendo el 1 el primer elemento de B, 4 el segundo elemento de A y 1 el primer elemento de C."}]}]